// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebLabParking.Entities;

namespace WebLabParking.Entities.Migrations
{
    [DbContext(typeof(ParkingContext))]
    partial class ParkingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebLabParking.Entities.Car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientCarsid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ClientCarsid");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WebLabParking.Entities.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WebLabParking.Entities.ClientCars", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Clientid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Clientid");

                    b.ToTable("ClientCars");
                });

            modelBuilder.Entity("WebLabParking.Entities.Parking", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParkingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Parkings");
                });

            modelBuilder.Entity("WebLabParking.Entities.ParkingPlace", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("Parkingid")
                        .HasColumnType("int");

                    b.Property<int?>("Ticketid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Parkingid");

                    b.HasIndex("Ticketid");

                    b.ToTable("ParkingPlaces");
                });

            modelBuilder.Entity("WebLabParking.Entities.ParkingTicket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Carid")
                        .HasColumnType("int");

                    b.Property<int?>("Clientid")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeavingTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Parkingid")
                        .HasColumnType("int");

                    b.Property<DateTime>("TakingTime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("Carid");

                    b.HasIndex("Clientid");

                    b.HasIndex("Parkingid");

                    b.ToTable("ParkingTickets");
                });

            modelBuilder.Entity("WebLabParking.Entities.Car", b =>
                {
                    b.HasOne("WebLabParking.Entities.ClientCars", null)
                        .WithMany("Cars")
                        .HasForeignKey("ClientCarsid");
                });

            modelBuilder.Entity("WebLabParking.Entities.ClientCars", b =>
                {
                    b.HasOne("WebLabParking.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("Clientid");
                });

            modelBuilder.Entity("WebLabParking.Entities.ParkingPlace", b =>
                {
                    b.HasOne("WebLabParking.Entities.Parking", null)
                        .WithMany("Places")
                        .HasForeignKey("Parkingid");

                    b.HasOne("WebLabParking.Entities.ParkingTicket", "Ticket")
                        .WithMany()
                        .HasForeignKey("Ticketid");
                });

            modelBuilder.Entity("WebLabParking.Entities.ParkingTicket", b =>
                {
                    b.HasOne("WebLabParking.Entities.Car", null)
                        .WithMany("Tickets")
                        .HasForeignKey("Carid");

                    b.HasOne("WebLabParking.Entities.Client", null)
                        .WithMany("Tickets")
                        .HasForeignKey("Clientid");

                    b.HasOne("WebLabParking.Entities.Parking", null)
                        .WithMany("Tickets")
                        .HasForeignKey("Parkingid");
                });
#pragma warning restore 612, 618
        }
    }
}
